name: Check

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu      # arch: x86_64, os: linux
          - aarch64-unknown-linux-gnu     # arch: aarch64
          - armv7-unknown-linux-gnueabihf # arch: armv7
          - x86_64-apple-darwin           # os: darwin
          - aarch64-apple-darwin          # os: darwin
          - x86_64-pc-windows-msvc        # os: windows

        include:
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            host_os: ubuntu-latest
          - target: x86_64-apple-darwin
            host_os: macos-latest
          - target: aarch64-apple-darwin
            host_os: macos-latest
          - target: x86_64-pc-windows-msvc
            host_os: windows-latest

    runs-on: ${{ matrix.host_os }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Prepare
      shell: bash
      run: |
        rustup target add ${{ matrix.target }}

    - name: Rustfmt
      run: rustup component add rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Build
      shell: bash
      run: |
        if [[ "${{ matrix.host_os }}" == "ubuntu-latest" ]]; then
          sudo .github/workflows/install-cross.sh
          cross build --verbose --target ${{ matrix.target }}
        else
          cargo build --verbose --target ${{ matrix.target }}
        fi

    - name: Run tests
      run: cargo test --verbose --all-features

