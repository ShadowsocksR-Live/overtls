name: Check

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: clippy
          args: -- -D warnings

  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu      # arch: x86_64, os: linux
          - aarch64-unknown-linux-gnu     # arch: aarch64
          - armv7-unknown-linux-gnueabihf # arch: armv7
          - x86_64-apple-darwin           # os: darwin
          - aarch64-apple-darwin          # os: darwin
          - x86_64-pc-windows-msvc        # os: windows
          - i686-pc-windows-msvc

        include:
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            host_os: ubuntu-latest
          - target: x86_64-apple-darwin
            host_os: macos-latest
          - target: aarch64-apple-darwin
            host_os: macos-latest
          - target: x86_64-pc-windows-msvc
            host_os: windows-latest
          - target: i686-pc-windows-msvc
            host_os: windows-latest

    runs-on: ${{ matrix.host_os }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - uses: dtolnay/rust-toolchain@1ff72ee08e3cb84d84adba594e0a297990fc1ed3 # stable

    - name: Prepare
      shell: bash
      run: |
        rustc --version
        rustup target add ${{ matrix.target }}

    - name: Build
      if: ${{ !cancelled() }}
      shell: bash
      run: |
        if [[ "${{ matrix.host_os }}" == "ubuntu-latest" ]]; then
          sudo .github/workflows/install-cross.sh
          cross build --verbose --target ${{ matrix.target }}
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            ./build-android.sh debug aarch64-linux-android
          fi
        else
          cargo build --verbose --target ${{ matrix.target }}
        fi

    - name: Run tests
      if: ${{ !cancelled() }}
      run: cargo test --verbose --all-features

    - name: Abort on error
      if: ${{ failure() }}
      run: echo "Some of jobs failed" && false
